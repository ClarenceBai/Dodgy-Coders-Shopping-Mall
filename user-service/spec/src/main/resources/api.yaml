openapi: 3.0.3
info:
  title: Dodgy Drivers Online mall - OpenAPI 3.0
  description: |-
    This is an online shopping mall Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 0.0.1
servers:
  - url: https://dodgycoders.ucd.ie/api
tags:
  - name: goods
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: order
    description: Online orders placed by users
  - name: user
    description: Operations about user
  - name: payment
    description: Payment for orders
paths:
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
            example: dodgycoder
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
            example: dodgycoder_pwd
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: dodgycoder
        password:
          type: string
          example: '12345'
        email:
          type: string
          example: dodgycoder@email.com
      xml:
        name: user
